@model BudgetApp.Models.Transaction

@{
    ViewBag.Title = "Create";
}

<h2>Enter New Transaction</h2>


@using (Html.BeginForm())
{
    <div class="form-horizontal">
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <p class="control-label col-md-2">Account</p>
            <div class="col-md-10">
                @Html.DropDownList("BankAccountId", (IEnumerable<SelectListItem>)ViewBag.BankAccountId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankAccountId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">Budget</p>
            <div class="col-md-10">
                @Html.DropDownList("BudgetItemId", (IEnumerable<SelectListItem>)ViewBag.BudgetItemsId, htmlAttributes: new { @class = "form-control budget-item" })
                @Html.ValidationMessageFor(model => model.BudgetItemId, "", new { @class = "text-danger" })
                <div class="checkbox">
                    <input id="budgetBool" type="checkbox" /><p>Not a budget item?</p>
                </div>
            </div>
        </div>
        
        <div class="form-group" id="category">
            <p class="control-label col-md-2">Category</p>
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>)ViewBag.CategoryId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">Type</p>
            <div class="col-md-10">
                <input id="typeBool" name="Type" type="checkbox" value="true"><p id="type">Expense</p>
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter transaction amount" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Give a  transaction description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <input type="text" name="Transacted" class="datepicker" placeholder="Choose transaction date" />
                @Html.ValidationMessageFor(model => model.Transacted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">Reconciled?</p>            
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Reconciled)
                    @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
