@model BudgetApp.Models.Transaction

    <h2><strong>Edit</strong> Transaction</h2>
    <div class="alert alert-info">
        <p><strong>Wait!</strong>Editing an existing transaction is not recommended. For itegrity of information, create a new reconciliation transaction to reflect refunds and changes.</p>
        <button class="createTrans btn btn-primary" type="button">Create New Transaction</button>
    </div>
    @using (Html.BeginForm("_Edit", "Transactions"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group login-input">
            @Html.DropDownList("BankAccountId", (IEnumerable<SelectListItem>)ViewBag.BankAccountId, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BankAccountId, "", new { @class = "text-anger" })
        </div>
        <div class="form-group">
            <p class="control-label col-md-2">Budget</p>
            <div class="col-md-10">
                @Html.DropDownList("BudgetItemmId", (IEnumerable<SelectListItem>)ViewBag.BudgetItemsId, htmlAttributes: new { @class = "form-control budget-itemm" })
                @Html.ValidationMessageFor(model => model.BudgetItemId, "", new { @class = "text-danger" })
                <div class="checkbox">
                    <input id="budgetBool" type="checkbox" />
                    <p>Not a budget item?</p>
                </div>
            </div>
        </div>
        <div class="form-group" id="category">
            <p class="control-label col-md-2">Category</p>
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>)ViewBag.CategoryId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <button type="button" id="typebtn" class="btn btn-danger form-control"><span id="ck-text">Expense</span></button>
            <input id="typebtn-ck" type="checkbox" name="Type" value="false" />
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter transaction amount" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Give a  transaction description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <input type="text" name="Transacted" class="datepicker" placeholder="Choose transaction date" />
                @Html.ValidationMessageFor(model => model.Transacted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <p class="control-label col-md-2">Reconciled?</p>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Reconciled)
                    @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>           
        <div class="form-group">
            <input type="submit" value="Save Changes" class="btn btn-primary pull-right" />
        </div>
    })
    }
