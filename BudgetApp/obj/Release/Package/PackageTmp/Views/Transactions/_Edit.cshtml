@model BudgetApp.Models.Transaction

    <h2><strong>Edit</strong> Transaction</h2>
    <div class="row alert alert-info">
        <div class="col-md-8">
            <p><strong>Wait!</strong>Editing an existing transaction is not recommended. For itegrity of information, create a new reconciliation transaction to reflect refunds and changes.</p>
        </div>
        <div class="col-md-4">
            <button class="cancel-trans btn btn-primary" type="button">Create New Transaction</button>
        </div>
    </div>
    @using (Html.BeginForm("_Edit", "Transactions"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-4">
            <div class="form-group login-input">
                @Html.DropDownList("BankAccountId", (IEnumerable<SelectListItem>)ViewBag.BankAccountId, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BankAccountId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter transaction amount" } })
                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @*<button type="button" id="typebtn" class="btn btn-danger form-control"><span id="type-text">Expense</span></button>*@
                <div id="typebtn">
                    @*<input id="typebtn-ck" type="checkbox" name="Income" value="0" class="btn btn-danger"/><span id="ck-text">Expense</span>*@
                    <p>@Html.RadioButtonFor(m => m.Income, false) Expense</p>
                    <p>@Html.RadioButtonFor(m => m.Income, true) Income</p>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <label>Budget</label>
                    @Html.DropDownList("BudgetItemId", (IEnumerable<SelectListItem>)ViewBag.BudgetItemId, htmlAttributes: new { @class = "form-control budget-item" })
                    @Html.ValidationMessageFor(model => model.BudgetItemId, "", new { @class = "text-danger" })
                    <div class="checkbox">
                        <input id="budgetBool" type="checkbox" />
                        <p>Not a budget item?</p>
                    </div>
            </div>
            <div class="form-group" id="category">
                <label>Category</label>
                    @Html.DropDownList("CategoryId", (IEnumerable<SelectListItem>)ViewBag.CategoryId, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Reconciled?</label>
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Reconciled)
                        @Html.ValidationMessageFor(model => model.Reconciled, "", new { @class = "text-danger" })
                    </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @placeholder = "Give a  transaction description" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                    <input type="text" name="Transacted" class="datepicker" placeholder="Transaction date" />
                    @Html.ValidationMessageFor(model => model.Transacted, "", new { @class = "text-danger" })
                </div>
            <div class="pull-right form-group">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
                @*<a href=@Url.Action("Index", "Transactions") class="btn btn-primary">Cancel</a>*@
                <button type="button" class="cancel-trans btn btn-primary" autofocus>Cancel</button>
            </div>
        </div>  
    }
